{"ast":null,"code":"var _jsxFileName = \"/home/pradhant/caruso/panda-board/Client/src/Components/DraggableList.js\";\nimport React, { Component } from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport DraggableItem from \"./DraggableItem\";\nimport Config from \"../Configuration\";\nimport AddItemInputForm from \"./AddItemInputForm\";\nimport ContentEditable from \"react-contenteditable\";\nimport PubSub from 'pubsub-js';\nconst KChangeInVoteIdentifier = 'Change In Vote';\n\nclass DraggableList extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleVote = this.handleVote.bind(this);\n    this.handleUnvote = this.handleUnvote.bind(this);\n    this.handleAddActionPoint = this.handleAddActionPoint.bind(this);\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.contentEditable = React.createRef();\n  }\n\n  handleSubmit(jsonObj) {\n    Config.getAxiosInstance().post(\"/update/Person\", jsonObj).then(this.props.onBoardUpdate);\n  }\n\n  handleRemove(id) {\n    if (window.confirm(\"Do you want to remove this item ?\")) {\n      Config.getAxiosInstance().post(\"/deletepost\", {\n        _id: id\n      }).then(this.props.onBoardUpdate);\n    }\n  }\n\n  handleVote(id) {\n    let reqData = {\n      params: {\n        team: Config.getTeamName(),\n        sprint: Config.getSprintName()\n      }\n    };\n    Config.getAxiosInstance().get(\"checkIfVotingAllowed\", reqData).then(res => {\n      if (res.data[0] === true) {\n        Config.getAxiosInstance().post(\"/addvote\", {\n          _id: id\n        }).then(this.props.onBoardUpdate).then(PubSub.publish(KChangeInVoteIdentifier));\n      } else {\n        alert(\"Limit Reached! \" + \"Users -> [\" + res.data[1] + \"] Votes allowed -> [\" + res.data[2] + \"]\");\n      }\n    });\n  }\n\n  handleUnvote(id) {\n    Config.getAxiosInstance().post(\"/removevote\", {\n      _id: id\n    }).then(res => {\n      if (res.data === -1) {\n        alert(\"Vote count is at the lowest\");\n      } else {\n        this.props.onBoardUpdate();\n      }\n    });\n  }\n\n  handleTitleChange(e, col) {\n    if (e !== this.props.displayName && !/^$/.test(e)) {\n      let jsonObj = {\n        column: col,\n        value: e,\n        team: Config.getTeamName()\n      };\n      Config.getAxiosInstance().post(\"/renameColumn\", jsonObj);\n    }\n  }\n\n  handleAddActionPoint(id, actionPoint) {\n    let jsonObj = {\n      _id: id,\n      actionPoint: actionPoint\n    };\n    Config.getAxiosInstance().post(\"/addactionpoint\", jsonObj).then(this.props.onBoardUpdate);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ContentEditable, {\n      innerRef: this.contentEditable,\n      html: !this.props.displayName ? \"\" : this.props.displayName // innerHTML of the editable div\n      ,\n      disabled: false // use true to disable editing\n      ,\n      onBlur: e => this.handleTitleChange(e.target.innerText, this.props.name) // handle innerHTML change\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: this.props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }), this.props.items.map((item, index) => /*#__PURE__*/React.createElement(DraggableItem, {\n      key: item._id,\n      id: item._id,\n      index: index,\n      item: item,\n      onVote: this.handleVote,\n      onUnvote: this.handleUnvote,\n      onRemove: this.handleRemove,\n      onAddActionPoint: this.handleAddActionPoint,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    })), provided.placeholder)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddItemInputForm, {\n      name: this.props.name,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default DraggableList;","map":{"version":3,"sources":["/home/pradhant/caruso/panda-board/Client/src/Components/DraggableList.js"],"names":["React","Component","Droppable","DraggableItem","Config","AddItemInputForm","ContentEditable","PubSub","KChangeInVoteIdentifier","DraggableList","constructor","props","handleSubmit","bind","handleRemove","handleVote","handleUnvote","handleAddActionPoint","handleTitleChange","contentEditable","createRef","jsonObj","getAxiosInstance","post","then","onBoardUpdate","id","window","confirm","_id","reqData","params","team","getTeamName","sprint","getSprintName","get","res","data","publish","alert","e","col","displayName","test","column","value","actionPoint","render","target","innerText","name","provided","droppableProps","innerRef","items","map","item","index","placeholder"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport DraggableItem from \"./DraggableItem\";\nimport Config from \"../Configuration\";\nimport AddItemInputForm from \"./AddItemInputForm\";\nimport ContentEditable from \"react-contenteditable\";\nimport PubSub from 'pubsub-js'\n\nconst KChangeInVoteIdentifier = 'Change In Vote';\n\nclass DraggableList extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleVote = this.handleVote.bind(this);\n    this.handleUnvote = this.handleUnvote.bind(this);\n    this.handleAddActionPoint = this.handleAddActionPoint.bind(this);\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.contentEditable = React.createRef();\n  }\n\n  handleSubmit(jsonObj) {\n    Config.getAxiosInstance()\n      .post(\"/update/Person\", jsonObj)\n      .then(this.props.onBoardUpdate);\n  }\n\n  handleRemove(id) {\n    if (window.confirm(\"Do you want to remove this item ?\")) {\n      Config.getAxiosInstance()\n        .post(\"/deletepost\", { _id: id })\n        .then(this.props.onBoardUpdate);\n    }\n  }\n\n  handleVote(id) {\n    let reqData = {\n      params: {\n        team: Config.getTeamName(),\n        sprint: Config.getSprintName(),\n      },\n    };\n    Config.getAxiosInstance().get(\"checkIfVotingAllowed\", reqData).then(res => {\n      if (res.data[0] === true) {\n        Config.getAxiosInstance()\n          .post(\"/addvote\", { _id: id })\n          .then(this.props.onBoardUpdate).then(PubSub.publish(KChangeInVoteIdentifier));\n      }\n      else {\n        alert(\"Limit Reached! \" + \"Users -> [\" + res.data[1] + \"] Votes allowed -> [\" + res.data[2] + \"]\");\n      }\n    });\n\n  }\n\n  handleUnvote(id) {\n    Config.getAxiosInstance()\n      .post(\"/removevote\", { _id: id })\n      .then(res => { if (res.data === -1) { alert(\"Vote count is at the lowest\"); } else { this.props.onBoardUpdate() } });\n  }\n\n  handleTitleChange(e, col) {\n    if (e !== this.props.displayName && !/^$/.test(e)) {\n      let jsonObj = {\n        column: col,\n        value: e,\n        team: Config.getTeamName(),\n      };\n      Config.getAxiosInstance()\n        .post(\"/renameColumn\", jsonObj);\n    }\n  }\n\n  handleAddActionPoint(id, actionPoint) {\n    let jsonObj = {\n      _id: id,\n      actionPoint: actionPoint,\n    };\n    Config.getAxiosInstance()\n      .post(\"/addactionpoint\", jsonObj)\n      .then(this.props.onBoardUpdate);\n  }\n\n  render() {\n    return (\n      <div className=\"col-sm\">\n        <h1 align=\"center\">\n          <ContentEditable\n            innerRef={this.contentEditable}\n            html={!this.props.displayName ? \"\" : this.props.displayName} // innerHTML of the editable div\n            disabled={false} // use true to disable editing\n            onBlur={(e) =>\n              this.handleTitleChange(e.target.innerText, this.props.name)\n            } // handle innerHTML change\n          />\n        </h1>\n        <Droppable droppableId={this.props.name}>\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {this.props.items.map((item, index) => (\n                <DraggableItem\n                  key={item._id}\n                  id={item._id}\n                  index={index}\n                  item={item}\n                  onVote={this.handleVote}\n                  onUnvote={this.handleUnvote}\n                  onRemove={this.handleRemove}\n                  onAddActionPoint={this.handleAddActionPoint}\n                />\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n        <p />\n        <AddItemInputForm name={this.props.name} onSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default DraggableList;\n"]},"metadata":{},"sourceType":"module"}