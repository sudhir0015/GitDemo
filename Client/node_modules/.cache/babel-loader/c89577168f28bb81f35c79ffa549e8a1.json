{"ast":null,"code":"var _jsxFileName = \"/home/pradhant/caruso/panda-board/Client/src/Components/PDFDocument.js\";\nimport React from 'react';\nimport { Font, Page, Text, View, Document, StyleSheet, Image, BlobProvider, pdf } from '@react-pdf/renderer';\nimport { Table, TableHeader, TableCell, TableBody, DataTableCell } from '@david.kucsai/react-pdf-table';\nimport logo from \"../PDF_Renderer_Assets/Images/TT_Logo2019_RGB_75_minWht.png\";\nimport Config from \"../Configuration\";\nimport lightFont from \"../PDF_Renderer_Assets/Fonts/Roboto/Roboto-Light.ttf\";\nimport regularFont from \"../PDF_Renderer_Assets/Fonts/Roboto/Roboto-Regular.ttf\";\nimport boldFont from \"../PDF_Renderer_Assets/Fonts/Roboto/Roboto-Bold.ttf\";\nimport { saveAs } from 'file-saver';\nFont.register({\n  family: 'Roboto',\n  src: lightFont,\n  fontWeight: 'light'\n});\nFont.register({\n  family: 'Roboto',\n  src: regularFont,\n  fontWeight: 'normal'\n});\nFont.register({\n  family: 'Roboto',\n  src: boldFont,\n  fontWeight: 'bold'\n});\nconst currentDate = new Date();\nvar goodItems;\nvar badItems;\nvar uglyItems;\nvar columnNames; // Create styles\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#FFFFFF',\n    fontFamily: 'Roboto',\n    paddingBottom: 20\n  },\n  section_header: {\n    flexGrow: 0,\n    margin: 10,\n    flexDirection: 'row'\n  },\n  section_body: {\n    flexGrow: 0,\n    margin: 10,\n    flexDirection: 'row'\n  },\n  section_footer: {\n    flexGrow: 0,\n    marginBottom: 10,\n    bottom: 0,\n    flexDirection: 'row',\n    position: \"absolute\"\n  },\n  section_vertical: {\n    flexGrow: 0,\n    margin: 20,\n    flexDirection: 'column'\n  },\n  section_left_align: {\n    padding: 1,\n    flexGrow: 1,\n    alignItems: \"flex-start\"\n  },\n  section_left_center: {\n    padding: 1,\n    flexGrow: 1,\n    alignItems: \"center\"\n  },\n  section_right_align: {\n    padding: 1,\n    flexGrow: 1,\n    alignItems: \"flex-end\"\n  },\n  image: {\n    top: -10,\n    width: \"50%\"\n  }\n}); // Create Document Component\n\nconst MyDocument = () => /*#__PURE__*/React.createElement(Document, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Page, {\n  wrap: true,\n  size: \"A4\",\n  style: styles.page,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(View, {\n  style: styles.section_header,\n  fixed: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(View, {\n  style: styles.section_left_align,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Text, {\n  style: {\n    fontWeight: \"regular\",\n    fontSize: \"16pt\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 11\n  }\n}, \"Retrospective\"), /*#__PURE__*/React.createElement(Text, {\n  style: {\n    fontWeight: \"light\",\n    fontSize: \"11pt\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 11\n  }\n}, \"Sprint: \", Config.getSprintName()), /*#__PURE__*/React.createElement(Text, {\n  style: {\n    fontWeight: \"light\",\n    fontSize: \"11pt\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 11\n  }\n}, \"Team: \", Config.getTeamName()), /*#__PURE__*/React.createElement(Text, {\n  style: {\n    fontWeight: \"light\",\n    fontSize: \"7pt\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 11\n  }\n}, \"Report date: \", currentDate.toDateString())), /*#__PURE__*/React.createElement(View, {\n  style: styles.section_right_align,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Image, {\n  style: styles.image,\n  src: logo,\n  alt: \"images\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 11\n  }\n}))), /*#__PURE__*/React.createElement(View, {\n  style: styles.section_vertical,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 7\n  }\n}, !columnNames ? /*#__PURE__*/React.createElement(Text, {\n  style: {\n    fontWeight: \"bold\",\n    fontSize: \"9pt\",\n    textAlign: \"left\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 25\n  }\n}, \"\\\"Good\\\"\") : /*#__PURE__*/React.createElement(Text, {\n  style: {\n    fontWeight: \"bold\",\n    fontSize: \"9pt\",\n    textAlign: \"left\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 112\n  }\n}, columnNames[\"Good\"].replace(/[\\r\\n]+/gm, \"\") + '\\n\\n'), /*#__PURE__*/React.createElement(Table, {\n  data: goodItems,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(TableHeader, {\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  fontSize: \"9pt\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(TableCell, {\n  weighting: 1.0,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 15\n  }\n}, \"Comment\"), /*#__PURE__*/React.createElement(TableCell, {\n  weighting: 0.2,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 15\n  }\n}, \"Votes\"), /*#__PURE__*/React.createElement(TableCell, {\n  weighting: 1.0,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 15\n  }\n}, \"Action Points\")), /*#__PURE__*/React.createElement(TableBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(DataTableCell, {\n  style: {\n    textAlign: \"justify\",\n    fontWeight: \"light\",\n    fontSize: \"8pt\",\n    padding: \"2\"\n  },\n  weighting: 1.0,\n  getContent: r => r.message,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(DataTableCell, {\n  style: {\n    textAlign: \"center\",\n    fontWeight: \"light\",\n    fontSize: \"8pt\",\n    padding: \"1\"\n  },\n  weighting: 0.195,\n  getContent: r => r.votes,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(DataTableCell, {\n  style: {\n    textAlign: \"justify\",\n    fontWeight: \"light\",\n    fontSize: \"8pt\",\n    padding: \"2\"\n  },\n  weighting: 1.0,\n  getContent: r => !r.actionPoints ? \"None\" : r.actionPoints.map((element, index) => index + 1 + \"\\r\" + element).splice(',').join(\"\\n\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 11\n  }\n}))), /*#__PURE__*/React.createElement(Text, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }\n}, '\\n'), !columnNames ? /*#__PURE__*/React.createElement(Text, {\n  style: {\n    fontWeight: \"bold\",\n    fontSize: \"9pt\",\n    textAlign: \"left\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 25\n  }\n}, \"\\\"Bad\\\"\") : /*#__PURE__*/React.createElement(Text, {\n  style: {\n    fontWeight: \"bold\",\n    fontSize: \"9pt\",\n    textAlign: \"left\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 111\n  }\n}, columnNames[\"Bad\"].replace(/[\\r\\n]+/gm, \"\") + '\\n\\n'), /*#__PURE__*/React.createElement(Table, {\n  data: badItems,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(TableHeader, {\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  fontSize: \"9pt\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(TableCell, {\n  weighting: 1.0,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 15\n  }\n}, \"Comment\"), /*#__PURE__*/React.createElement(TableCell, {\n  weighting: 0.2,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 15\n  }\n}, \"Votes\"), /*#__PURE__*/React.createElement(TableCell, {\n  weighting: 1.0,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 15\n  }\n}, \"Action Points\")), /*#__PURE__*/React.createElement(TableBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(DataTableCell, {\n  style: {\n    textAlign: \"justify\",\n    fontWeight: \"light\",\n    fontSize: \"8pt\",\n    padding: \"2\"\n  },\n  weighting: 1.0,\n  getContent: r => r.message,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(DataTableCell, {\n  style: {\n    textAlign: \"center\",\n    fontWeight: \"light\",\n    fontSize: \"8pt\",\n    padding: \"1\"\n  },\n  weighting: 0.195,\n  getContent: r => r.votes,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(DataTableCell, {\n  style: {\n    textAlign: \"justify\",\n    fontWeight: \"light\",\n    fontSize: \"8pt\",\n    padding: \"2\"\n  },\n  weighting: 1.0,\n  getContent: r => !r.actionPoints ? \"None\" : r.actionPoints.map((element, index) => index + 1 + \"\\r\" + element).splice(',').join(\"\\n\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 11\n  }\n}))), /*#__PURE__*/React.createElement(Text, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }\n}, '\\n'), !columnNames ? /*#__PURE__*/React.createElement(Text, {\n  style: {\n    fontWeight: \"bold\",\n    fontSize: \"9pt\",\n    textAlign: \"left\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 25\n  }\n}, \"\\\"Ugly\\\"\") : /*#__PURE__*/React.createElement(Text, {\n  style: {\n    fontWeight: \"bold\",\n    fontSize: \"9pt\",\n    textAlign: \"left\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 112\n  }\n}, columnNames[\"Ugly\"].replace(/[\\r\\n]+/gm, \"\") + '\\n\\n'), /*#__PURE__*/React.createElement(Table, {\n  data: uglyItems,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(TableHeader, {\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  fontSize: \"9pt\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(TableCell, {\n  weighting: 1.0,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 15\n  }\n}, \"Comment\"), /*#__PURE__*/React.createElement(TableCell, {\n  weighting: 0.2,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 15\n  }\n}, \"Votes\"), /*#__PURE__*/React.createElement(TableCell, {\n  weighting: 1.0,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 15\n  }\n}, \"Action Points\")), /*#__PURE__*/React.createElement(TableBody, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(DataTableCell, {\n  style: {\n    textAlign: \"justify\",\n    fontWeight: \"light\",\n    fontSize: \"8pt\",\n    padding: \"2\"\n  },\n  weighting: 1.0,\n  getContent: r => r.message,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(DataTableCell, {\n  style: {\n    textAlign: \"center\",\n    fontWeight: \"light\",\n    fontSize: \"8pt\",\n    padding: \"1\"\n  },\n  weighting: 0.195,\n  getContent: r => r.votes,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(DataTableCell, {\n  style: {\n    textAlign: \"justify\",\n    fontWeight: \"light\",\n    fontSize: \"8pt\",\n    padding: \"2\"\n  },\n  weighting: 1.0,\n  getContent: r => !r.actionPoints ? \"None\" : r.actionPoints.map((element, index) => index + 1 + \"\\r\" + element).splice(',').join(\"\\n\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 11\n  }\n}))), /*#__PURE__*/React.createElement(Text, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }\n}, '\\n')), /*#__PURE__*/React.createElement(View, {\n  style: styles.section_footer,\n  fixed: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Text, {\n  style: {\n    textAlign: \"center\",\n    fontWeight: \"light\",\n    fontSize: \"7pt\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }\n}, \"Copyright \", '\\u00A9', \" \", currentDate.getFullYear(), \" TomTom N.V. All rights reserved.\"))));\n\nconst UpdateData = async (list1, list2, list3, settings) => {\n  goodItems = list1;\n  badItems = list2;\n  uglyItems = list3;\n  columnNames = settings;\n};\n\nconst GeneratePDF = async filename => {\n  const blob = await pdf( /*#__PURE__*/React.createElement(MyDocument, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  })).toBlob();\n  saveAs(blob, filename);\n};\n\nexport default MyDocument;\nexport { MyDocument, GeneratePDF, UpdateData };","map":{"version":3,"sources":["/home/pradhant/caruso/panda-board/Client/src/Components/PDFDocument.js"],"names":["React","Font","Page","Text","View","Document","StyleSheet","Image","BlobProvider","pdf","Table","TableHeader","TableCell","TableBody","DataTableCell","logo","Config","lightFont","regularFont","boldFont","saveAs","register","family","src","fontWeight","currentDate","Date","goodItems","badItems","uglyItems","columnNames","styles","create","page","backgroundColor","fontFamily","paddingBottom","section_header","flexGrow","margin","flexDirection","section_body","section_footer","marginBottom","bottom","position","section_vertical","section_left_align","padding","alignItems","section_left_center","section_right_align","image","top","width","MyDocument","fontSize","getSprintName","getTeamName","toDateString","textAlign","replace","r","message","votes","actionPoints","map","element","index","splice","join","getFullYear","UpdateData","list1","list2","list3","settings","GeneratePDF","filename","blob","toBlob"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,QAAjC,EAA2CC,UAA3C,EAAuDC,KAAvD,EAA8DC,YAA9D,EAA4EC,GAA5E,QAAsF,qBAAtF;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,SAAxC,EAAmDC,aAAnD,QAAyE,+BAAzE;AACA,OAAOC,IAAP,MAAiB,6DAAjB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,sDAAtB;AACA,OAAOC,WAAP,MAAwB,wDAAxB;AACA,OAAOC,QAAP,MAAqB,qDAArB;AACA,SAASC,MAAT,QAAuB,YAAvB;AAEAnB,IAAI,CAACoB,QAAL,CAAc;AAAEC,EAAAA,MAAM,EAAE,QAAV;AAAoBC,EAAAA,GAAG,EAAEN,SAAzB;AAAoCO,EAAAA,UAAU,EAAE;AAAhD,CAAd;AACAvB,IAAI,CAACoB,QAAL,CAAc;AAAEC,EAAAA,MAAM,EAAE,QAAV;AAAoBC,EAAAA,GAAG,EAAEL,WAAzB;AAAsCM,EAAAA,UAAU,EAAE;AAAlD,CAAd;AACAvB,IAAI,CAACoB,QAAL,CAAc;AAAEC,EAAAA,MAAM,EAAE,QAAV;AAAoBC,EAAAA,GAAG,EAAEJ,QAAzB;AAAmCK,EAAAA,UAAU,EAAE;AAA/C,CAAd;AAEA,MAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB;AACA,IAAIC,SAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,WAAJ,C,CAEA;;AACA,MAAMC,MAAM,GAAGzB,UAAU,CAAC0B,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,aAAa,EAAE;AAHX,GADyB;AAM/BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,QAAQ,EAAE,CADI;AAEdC,IAAAA,MAAM,EAAE,EAFM;AAGdC,IAAAA,aAAa,EAAE;AAHD,GANe;AAW/BC,EAAAA,YAAY,EAAE;AACZH,IAAAA,QAAQ,EAAE,CADE;AAEZC,IAAAA,MAAM,EAAE,EAFI;AAGZC,IAAAA,aAAa,EAAE;AAHH,GAXiB;AAgB/BE,EAAAA,cAAc,EAAE;AACdJ,IAAAA,QAAQ,EAAE,CADI;AAEdK,IAAAA,YAAY,EAAE,EAFA;AAGdC,IAAAA,MAAM,EAAE,CAHM;AAIdJ,IAAAA,aAAa,EAAE,KAJD;AAKdK,IAAAA,QAAQ,EAAE;AALI,GAhBe;AAuB/BC,EAAAA,gBAAgB,EAAE;AAChBR,IAAAA,QAAQ,EAAE,CADM;AAEhBC,IAAAA,MAAM,EAAE,EAFQ;AAGhBC,IAAAA,aAAa,EAAE;AAHC,GAvBa;AA4B/BO,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,OAAO,EAAE,CADS;AAElBV,IAAAA,QAAQ,EAAE,CAFQ;AAGlBW,IAAAA,UAAU,EAAE;AAHM,GA5BW;AAiC/BC,EAAAA,mBAAmB,EAAE;AACnBF,IAAAA,OAAO,EAAE,CADU;AAEnBV,IAAAA,QAAQ,EAAE,CAFS;AAGnBW,IAAAA,UAAU,EAAE;AAHO,GAjCU;AAsC/BE,EAAAA,mBAAmB,EAAE;AACnBH,IAAAA,OAAO,EAAE,CADU;AAEnBV,IAAAA,QAAQ,EAAE,CAFS;AAGnBW,IAAAA,UAAU,EAAE;AAHO,GAtCU;AA2C/BG,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE,CAAC,EADD;AAELC,IAAAA,KAAK,EAAE;AAFF;AA3CwB,CAAlB,CAAf,C,CAiDA;;AACA,MAAMC,UAAU,GAAG,mBACjB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,IAAD;AAAM,EAAA,IAAI,MAAV;AAAW,EAAA,IAAI,EAAC,IAAhB;AAAqB,EAAA,KAAK,EAAExB,MAAM,CAACE,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAEF,MAAM,CAACM,cAApB;AAAoC,EAAA,KAAK,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAEN,MAAM,CAACgB,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAACvB,IAAAA,UAAU,EAAE,SAAb;AAAwBgC,IAAAA,QAAQ,EAAE;AAAlC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAAChC,IAAAA,UAAU,EAAE,OAAb;AAAsBgC,IAAAA,QAAQ,EAAE;AAAhC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA+DxC,MAAM,CAACyC,aAAP,EAA/D,CAFF,eAGE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAACjC,IAAAA,UAAU,EAAE,OAAb;AAAsBgC,IAAAA,QAAQ,EAAE;AAAhC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA6DxC,MAAM,CAAC0C,WAAP,EAA7D,CAHF,eAIE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAAClC,IAAAA,UAAU,EAAE,OAAb;AAAsBgC,IAAAA,QAAQ,EAAE;AAAhC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmE/B,WAAW,CAACkC,YAAZ,EAAnE,CAJF,CADF,eAOE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE5B,MAAM,CAACoB,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAEpB,MAAM,CAACqB,KAArB;AAA4B,EAAA,GAAG,EAAErC,IAAjC;AAAuC,EAAA,GAAG,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAPF,CADF,eAYE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAEgB,MAAM,CAACe,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAChB,WAAD,gBAAe,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAACN,IAAAA,UAAU,EAAE,MAAb;AAAqBgC,IAAAA,QAAQ,EAAE,KAA/B;AAAsCI,IAAAA,SAAS,EAAE;AAAjD,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAf,gBAAsG,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAACpC,IAAAA,UAAU,EAAE,MAAb;AAAqBgC,IAAAA,QAAQ,EAAE,KAA/B;AAAsCI,IAAAA,SAAS,EAAE;AAAjD,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAyE9B,WAAW,CAAC,MAAD,CAAX,CAAoB+B,OAApB,CAA6B,WAA7B,EAA0C,EAA1C,IAAiD,MAA1H,CADzG,eAEE,oBAAC,KAAD;AACE,EAAA,IAAI,EAAElC,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAGE,oBAAC,WAAD;AAAa,EAAA,SAAS,EAAE,QAAxB;AAAkC,EAAA,UAAU,EAAE,MAA9C;AAAsD,EAAA,QAAQ,EAAE,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAII,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,eAOI,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPJ,CAHF,eAcE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,aAAD;AAAe,EAAA,KAAK,EAAE;AAACiC,IAAAA,SAAS,EAAE,SAAZ;AAAuBpC,IAAAA,UAAU,EAAE,OAAnC;AAA4CgC,IAAAA,QAAQ,EAAE,KAAtD;AAA6DR,IAAAA,OAAO,EAAC;AAArE,GAAtB;AAAiG,EAAA,SAAS,EAAE,GAA5G;AAAiH,EAAA,UAAU,EAAGc,CAAD,IAAOA,CAAC,CAACC,OAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,eAEA,oBAAC,aAAD;AAAe,EAAA,KAAK,EAAE;AAACH,IAAAA,SAAS,EAAE,QAAZ;AAAsBpC,IAAAA,UAAU,EAAE,OAAlC;AAA2CgC,IAAAA,QAAQ,EAAE,KAArD;AAA4DR,IAAAA,OAAO,EAAC;AAApE,GAAtB;AAAgG,EAAA,SAAS,EAAE,KAA3G;AAAkH,EAAA,UAAU,EAAGc,CAAD,IAAOA,CAAC,CAACE,KAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFA,eAGA,oBAAC,aAAD;AAAe,EAAA,KAAK,EAAE;AAACJ,IAAAA,SAAS,EAAE,SAAZ;AAAuBpC,IAAAA,UAAU,EAAE,OAAnC;AAA4CgC,IAAAA,QAAQ,EAAE,KAAtD;AAA6DR,IAAAA,OAAO,EAAC;AAArE,GAAtB;AAAiG,EAAA,SAAS,EAAE,GAA5G;AAAiH,EAAA,UAAU,EAAGc,CAAD,IAAO,CAACA,CAAC,CAACG,YAAH,GAAkB,MAAlB,GAA2BH,CAAC,CAACG,YAAF,CAAeC,GAAf,CAAmB,CAACC,OAAD,EAASC,KAAT,KAAoBA,KAAK,GAAG,CAAT,GAAc,IAAd,GAAqBD,OAA3D,EAAoEE,MAApE,CAA2E,GAA3E,EAAgFC,IAAhF,CAAqF,IAArF,CAA/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHA,CAdF,CAFF,eAsBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAO,IAAP,CAtBF,EAuBG,CAACxC,WAAD,gBAAe,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAACN,IAAAA,UAAU,EAAE,MAAb;AAAqBgC,IAAAA,QAAQ,EAAE,KAA/B;AAAsCI,IAAAA,SAAS,EAAE;AAAjD,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAf,gBAAqG,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAACpC,IAAAA,UAAU,EAAE,MAAb;AAAqBgC,IAAAA,QAAQ,EAAE,KAA/B;AAAsCI,IAAAA,SAAS,EAAE;AAAjD,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAyE9B,WAAW,CAAC,KAAD,CAAX,CAAmB+B,OAAnB,CAA4B,WAA5B,EAAyC,EAAzC,IAAgD,MAAzH,CAvBxG,eAwBE,oBAAC,KAAD;AACE,EAAA,IAAI,EAAEjC,QADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAGE,oBAAC,WAAD;AAAa,EAAA,SAAS,EAAE,QAAxB;AAAkC,EAAA,UAAU,EAAE,MAA9C;AAAsD,EAAA,QAAQ,EAAE,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAII,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,eAOI,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPJ,CAHF,eAcE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,aAAD;AAAe,EAAA,KAAK,EAAE;AAACgC,IAAAA,SAAS,EAAE,SAAZ;AAAuBpC,IAAAA,UAAU,EAAE,OAAnC;AAA4CgC,IAAAA,QAAQ,EAAE,KAAtD;AAA6DR,IAAAA,OAAO,EAAC;AAArE,GAAtB;AAAiG,EAAA,SAAS,EAAE,GAA5G;AAAiH,EAAA,UAAU,EAAGc,CAAD,IAAOA,CAAC,CAACC,OAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,eAEA,oBAAC,aAAD;AAAe,EAAA,KAAK,EAAE;AAACH,IAAAA,SAAS,EAAE,QAAZ;AAAsBpC,IAAAA,UAAU,EAAE,OAAlC;AAA2CgC,IAAAA,QAAQ,EAAE,KAArD;AAA4DR,IAAAA,OAAO,EAAC;AAApE,GAAtB;AAAgG,EAAA,SAAS,EAAE,KAA3G;AAAkH,EAAA,UAAU,EAAGc,CAAD,IAAOA,CAAC,CAACE,KAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFA,eAGA,oBAAC,aAAD;AAAe,EAAA,KAAK,EAAE;AAACJ,IAAAA,SAAS,EAAE,SAAZ;AAAuBpC,IAAAA,UAAU,EAAE,OAAnC;AAA4CgC,IAAAA,QAAQ,EAAE,KAAtD;AAA6DR,IAAAA,OAAO,EAAC;AAArE,GAAtB;AAAiG,EAAA,SAAS,EAAE,GAA5G;AAAiH,EAAA,UAAU,EAAGc,CAAD,IAAO,CAACA,CAAC,CAACG,YAAH,GAAkB,MAAlB,GAA2BH,CAAC,CAACG,YAAF,CAAeC,GAAf,CAAmB,CAACC,OAAD,EAASC,KAAT,KAAoBA,KAAK,GAAG,CAAT,GAAc,IAAd,GAAqBD,OAA3D,EAAoEE,MAApE,CAA2E,GAA3E,EAAgFC,IAAhF,CAAqF,IAArF,CAA/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHA,CAdF,CAxBF,eA4CE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAO,IAAP,CA5CF,EA6CG,CAACxC,WAAD,gBAAe,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAACN,IAAAA,UAAU,EAAE,MAAb;AAAqBgC,IAAAA,QAAQ,EAAE,KAA/B;AAAsCI,IAAAA,SAAS,EAAE;AAAjD,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAf,gBAAsG,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAACpC,IAAAA,UAAU,EAAE,MAAb;AAAqBgC,IAAAA,QAAQ,EAAE,KAA/B;AAAsCI,IAAAA,SAAS,EAAE;AAAjD,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAyE9B,WAAW,CAAC,MAAD,CAAX,CAAoB+B,OAApB,CAA6B,WAA7B,EAA0C,EAA1C,IAAiD,MAA1H,CA7CzG,eA8CE,oBAAC,KAAD;AACE,EAAA,IAAI,EAAEhC,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAGE,oBAAC,WAAD;AAAa,EAAA,SAAS,EAAE,QAAxB;AAAkC,EAAA,UAAU,EAAE,MAA9C;AAAsD,EAAA,QAAQ,EAAE,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAII,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,eAOI,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPJ,CAHF,eAcE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,aAAD;AAAe,EAAA,KAAK,EAAE;AAAC+B,IAAAA,SAAS,EAAE,SAAZ;AAAuBpC,IAAAA,UAAU,EAAE,OAAnC;AAA4CgC,IAAAA,QAAQ,EAAE,KAAtD;AAA6DR,IAAAA,OAAO,EAAC;AAArE,GAAtB;AAAiG,EAAA,SAAS,EAAE,GAA5G;AAAiH,EAAA,UAAU,EAAGc,CAAD,IAAOA,CAAC,CAACC,OAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,eAEA,oBAAC,aAAD;AAAe,EAAA,KAAK,EAAE;AAACH,IAAAA,SAAS,EAAE,QAAZ;AAAsBpC,IAAAA,UAAU,EAAE,OAAlC;AAA2CgC,IAAAA,QAAQ,EAAE,KAArD;AAA4DR,IAAAA,OAAO,EAAC;AAApE,GAAtB;AAAgG,EAAA,SAAS,EAAE,KAA3G;AAAkH,EAAA,UAAU,EAAGc,CAAD,IAAOA,CAAC,CAACE,KAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFA,eAGA,oBAAC,aAAD;AAAe,EAAA,KAAK,EAAE;AAACJ,IAAAA,SAAS,EAAE,SAAZ;AAAuBpC,IAAAA,UAAU,EAAE,OAAnC;AAA4CgC,IAAAA,QAAQ,EAAE,KAAtD;AAA6DR,IAAAA,OAAO,EAAC;AAArE,GAAtB;AAAiG,EAAA,SAAS,EAAE,GAA5G;AAAiH,EAAA,UAAU,EAAGc,CAAD,IAAO,CAACA,CAAC,CAACG,YAAH,GAAkB,MAAlB,GAA2BH,CAAC,CAACG,YAAF,CAAeC,GAAf,CAAmB,CAACC,OAAD,EAASC,KAAT,KAAoBA,KAAK,GAAG,CAAT,GAAc,IAAd,GAAqBD,OAA3D,EAAoEE,MAApE,CAA2E,GAA3E,EAAgFC,IAAhF,CAAqF,IAArF,CAA/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHA,CAdF,CA9CF,eAkEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAO,IAAP,CAlEF,CAZF,eAgFE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAEvC,MAAM,CAACW,cAApB;AAAoC,EAAA,KAAK,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAACkB,IAAAA,SAAS,EAAE,QAAZ;AAAsBpC,IAAAA,UAAU,EAAE,OAAlC;AAA2CgC,IAAAA,QAAQ,EAAE;AAArD,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACa,QADb,OACwB/B,WAAW,CAAC8C,WAAZ,EADxB,sCADF,CAhFF,CADF,CADF;;AA2FA,MAAMC,UAAU,GAAG,OAAOC,KAAP,EAAcC,KAAd,EAAqBC,KAArB,EAA4BC,QAA5B,KAAyC;AAC1DjD,EAAAA,SAAS,GAAG8C,KAAZ;AACA7C,EAAAA,QAAQ,GAAG8C,KAAX;AACA7C,EAAAA,SAAS,GAAG8C,KAAZ;AACA7C,EAAAA,WAAW,GAAG8C,QAAd;AACD,CALD;;AAOA,MAAMC,WAAW,GAAG,MAAOC,QAAP,IAAoB;AACtC,QAAMC,IAAI,GAAG,MAAMtE,GAAG,eACpB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADoB,CAAH,CAEhBuE,MAFgB,EAAnB;AAGA5D,EAAAA,MAAM,CAAC2D,IAAD,EAAOD,QAAP,CAAN;AACD,CALD;;AAOA,eAAevB,UAAf;AACA,SAASA,UAAT,EAAqBsB,WAArB,EAAkCL,UAAlC","sourcesContent":["import React from 'react';\nimport { Font, Page, Text, View, Document, StyleSheet, Image, BlobProvider, pdf} from '@react-pdf/renderer';\nimport { Table, TableHeader, TableCell, TableBody, DataTableCell }  from '@david.kucsai/react-pdf-table';\nimport logo from \"../PDF_Renderer_Assets/Images/TT_Logo2019_RGB_75_minWht.png\"\nimport Config from \"../Configuration\";\nimport lightFont from \"../PDF_Renderer_Assets/Fonts/Roboto/Roboto-Light.ttf\";\nimport regularFont from \"../PDF_Renderer_Assets/Fonts/Roboto/Roboto-Regular.ttf\";\nimport boldFont from \"../PDF_Renderer_Assets/Fonts/Roboto/Roboto-Bold.ttf\";\nimport { saveAs } from 'file-saver';\n\nFont.register({ family: 'Roboto', src: lightFont, fontWeight: 'light' });\nFont.register({ family: 'Roboto', src: regularFont, fontWeight: 'normal' });\nFont.register({ family: 'Roboto', src: boldFont, fontWeight: 'bold' });\n\nconst currentDate = new Date();\nvar goodItems;\nvar badItems;\nvar uglyItems;\nvar columnNames;\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#FFFFFF',\n    fontFamily: 'Roboto',\n    paddingBottom: 20\n  },\n  section_header: {\n    flexGrow: 0,\n    margin: 10,\n    flexDirection: 'row'\n  },\n  section_body: {\n    flexGrow: 0,\n    margin: 10,\n    flexDirection: 'row'\n  },\n  section_footer: {\n    flexGrow: 0,\n    marginBottom: 10,\n    bottom: 0,\n    flexDirection: 'row',\n    position: \"absolute\"\n  },\n  section_vertical: {\n    flexGrow: 0,\n    margin: 20,\n    flexDirection: 'column'\n  },\n  section_left_align: {\n    padding: 1,\n    flexGrow: 1,\n    alignItems: \"flex-start\"\n  },\n  section_left_center: {\n    padding: 1,\n    flexGrow: 1,\n    alignItems: \"center\"\n  },\n  section_right_align: {\n    padding: 1,\n    flexGrow: 1,\n    alignItems: \"flex-end\"\n  },\n  image: {\n    top: -10,\n    width: \"50%\",\n  },\n});\n\n// Create Document Component\nconst MyDocument = () => (\n  <Document>\n    <Page wrap size=\"A4\" style={styles.page}>\n      <View style={styles.section_header} fixed>\n        <View style={styles.section_left_align}>\n          <Text style={{fontWeight: \"regular\", fontSize: \"16pt\"}}>Retrospective</Text>\n          <Text style={{fontWeight: \"light\", fontSize: \"11pt\"}}>Sprint: {Config.getSprintName()}</Text>\n          <Text style={{fontWeight: \"light\", fontSize: \"11pt\"}}>Team: {Config.getTeamName()}</Text>\n          <Text style={{fontWeight: \"light\", fontSize: \"7pt\"}}>Report date: {currentDate.toDateString()}</Text>\n        </View>\n        <View style={styles.section_right_align}>\n          <Image style={styles.image} src={logo} alt=\"images\"></Image>\n        </View>\n      </View>\n      <View style={styles.section_vertical}>\n        {!columnNames ? <Text style={{fontWeight: \"bold\", fontSize: \"9pt\", textAlign: \"left\"}}>\"Good\"</Text> : <Text style={{fontWeight: \"bold\", fontSize: \"9pt\", textAlign: \"left\"}}>{ columnNames[\"Good\"].replace( /[\\r\\n]+/gm, \"\" ) + '\\n\\n'}</Text>}\n        <Table\n          data={goodItems}\n          >\n          <TableHeader textAlign={\"center\"} fontWeight={\"bold\"} fontSize={\"9pt\"}>\n              <TableCell weighting={1.0}>\n                  Comment\n              </TableCell>\n              <TableCell weighting={0.2}>\n                  Votes\n              </TableCell>\n              <TableCell weighting={1.0}>\n                  Action Points\n              </TableCell>\n          </TableHeader>\n          <TableBody>\n          <DataTableCell style={{textAlign: \"justify\", fontWeight: \"light\", fontSize: \"8pt\", padding:\"2\"}} weighting={1.0} getContent={(r) => r.message}/>\n          <DataTableCell style={{textAlign: \"center\", fontWeight: \"light\", fontSize: \"8pt\", padding:\"1\"}} weighting={0.195} getContent={(r) => r.votes}/>\n          <DataTableCell style={{textAlign: \"justify\", fontWeight: \"light\", fontSize: \"8pt\", padding:\"2\"}} weighting={1.0} getContent={(r) => !r.actionPoints ? \"None\" : r.actionPoints.map((element,index) => (index + 1) + \"\\r\" + element).splice(',').join(\"\\n\")}/>\n          </TableBody>\n        </Table>\n        <Text>{'\\n'}</Text>\n        {!columnNames ? <Text style={{fontWeight: \"bold\", fontSize: \"9pt\", textAlign: \"left\"}}>\"Bad\"</Text> : <Text style={{fontWeight: \"bold\", fontSize: \"9pt\", textAlign: \"left\"}}>{ columnNames[\"Bad\"].replace( /[\\r\\n]+/gm, \"\" ) + '\\n\\n'}</Text>}\n        <Table\n          data={badItems}\n          >\n          <TableHeader textAlign={\"center\"} fontWeight={\"bold\"} fontSize={\"9pt\"}>\n              <TableCell weighting={1.0}>\n                  Comment\n              </TableCell>\n              <TableCell weighting={0.2}>\n                  Votes\n              </TableCell>\n              <TableCell weighting={1.0}>\n                  Action Points\n              </TableCell>\n          </TableHeader>\n          <TableBody>\n          <DataTableCell style={{textAlign: \"justify\", fontWeight: \"light\", fontSize: \"8pt\", padding:\"2\"}} weighting={1.0} getContent={(r) => r.message}/>\n          <DataTableCell style={{textAlign: \"center\", fontWeight: \"light\", fontSize: \"8pt\", padding:\"1\"}} weighting={0.195} getContent={(r) => r.votes}/>\n          <DataTableCell style={{textAlign: \"justify\", fontWeight: \"light\", fontSize: \"8pt\", padding:\"2\"}} weighting={1.0} getContent={(r) => !r.actionPoints ? \"None\" : r.actionPoints.map((element,index) => (index + 1) + \"\\r\" + element).splice(',').join(\"\\n\")}/>\n          </TableBody>\n        </Table>\n        <Text>{'\\n'}</Text>\n        {!columnNames ? <Text style={{fontWeight: \"bold\", fontSize: \"9pt\", textAlign: \"left\"}}>\"Ugly\"</Text> : <Text style={{fontWeight: \"bold\", fontSize: \"9pt\", textAlign: \"left\"}}>{ columnNames[\"Ugly\"].replace( /[\\r\\n]+/gm, \"\" ) + '\\n\\n'}</Text>}\n        <Table\n          data={uglyItems}\n          >\n          <TableHeader textAlign={\"center\"} fontWeight={\"bold\"} fontSize={\"9pt\"}>\n              <TableCell weighting={1.0}>\n                  Comment\n              </TableCell>\n              <TableCell weighting={0.2}>\n                  Votes\n              </TableCell>\n              <TableCell weighting={1.0}>\n                  Action Points\n              </TableCell>\n          </TableHeader>\n          <TableBody>\n          <DataTableCell style={{textAlign: \"justify\", fontWeight: \"light\", fontSize: \"8pt\", padding:\"2\"}} weighting={1.0} getContent={(r) => r.message}/>\n          <DataTableCell style={{textAlign: \"center\", fontWeight: \"light\", fontSize: \"8pt\", padding:\"1\"}} weighting={0.195} getContent={(r) => r.votes}/>\n          <DataTableCell style={{textAlign: \"justify\", fontWeight: \"light\", fontSize: \"8pt\", padding:\"2\"}} weighting={1.0} getContent={(r) => !r.actionPoints ? \"None\" : r.actionPoints.map((element,index) => (index + 1) + \"\\r\" + element).splice(',').join(\"\\n\")}/>\n          </TableBody>\n        </Table>\n        <Text>{'\\n'}</Text>\n      </View>\n      <View style={styles.section_footer} fixed>\n        <Text style={{textAlign: \"center\", fontWeight: \"light\", fontSize: \"7pt\"}}>\n          Copyright {'\\u00A9'} {currentDate.getFullYear()} TomTom N.V. All rights reserved.\n        </Text>\n      </View>\n    </Page>\n  </Document>\n);\n\nconst UpdateData = async (list1, list2, list3, settings) => {\n  goodItems = list1;\n  badItems = list2;\n  uglyItems = list3;\n  columnNames = settings;\n};\n\nconst GeneratePDF = async (filename) => {\n  const blob = await pdf((\n    <MyDocument />\n  )).toBlob();\n  saveAs(blob, filename);\n};\n\nexport default MyDocument;\nexport { MyDocument, GeneratePDF, UpdateData };"]},"metadata":{},"sourceType":"module"}