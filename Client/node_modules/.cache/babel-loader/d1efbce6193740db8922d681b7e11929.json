{"ast":null,"code":"var _jsxFileName = \"/home/pradhant/caruso/panda-board/Client/src/Components/TopVoted.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Config from \"../Configuration\";\n\nfunction TopVoted() {\n  let [items, setItems] = useState([]);\n  useEffect(() => {\n    updateItems();\n    const interval = setInterval(() => updateItems(), 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  function updateItems() {\n    var jsonObj = {\n      params: {\n        team: Config.getTeamName(),\n        sprint: Config.getSprintName()\n      }\n    };\n    Config.getAxiosInstance().get(\"getTopVotedItemsForASprint\", jsonObj).then(res => {\n      setItems(res.data.items.map(item => /*#__PURE__*/React.createElement(Col, {\n        key: item._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Card, {\n        bg: \"info\",\n        text: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }\n      }, \" \", item.votes, \"votes[\", res.data.settings ? res.data.settings[item.type] : item.type, \"]\", \" \"), \" \", /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }\n      }, \" \", item.message, \" \")), \" \", /*#__PURE__*/React.createElement(Card.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, \" \", item.name, \" \"), \" \"), \" \")));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    border: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \" Top Voted \"), \" \", /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \" \", items, \" \"), \" \"), \" \"), \" \");\n}\n\nexport default TopVoted;","map":{"version":3,"sources":["/home/pradhant/caruso/panda-board/Client/src/Components/TopVoted.js"],"names":["React","useEffect","useState","Card","Col","Container","Row","Config","TopVoted","items","setItems","updateItems","interval","setInterval","clearInterval","jsonObj","params","team","getTeamName","sprint","getSprintName","getAxiosInstance","get","then","res","data","map","item","_id","votes","settings","type","message","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,SAASC,QAAT,GAAoB;AAClB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW;AACX,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAMF,WAAW,EAAlB,EAAsB,IAAtB,CAA5B;AACA,WAAO,MAAMG,aAAa,CAACF,QAAD,CAA1B;AACD,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASD,WAAT,GAAuB;AACrB,QAAII,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAEV,MAAM,CAACW,WAAP,EAAR;AAA8BC,QAAAA,MAAM,EAAEZ,MAAM,CAACa,aAAP;AAAtC;AADI,KAAd;AAIAb,IAAAA,MAAM,CAACc,gBAAP,GACGC,GADH,CACO,4BADP,EACqCP,OADrC,EAEGQ,IAFH,CAESC,GAAD,IAAS;AACbd,MAAAA,QAAQ,CACNc,GAAG,CAACC,IAAJ,CAAShB,KAAT,CAAeiB,GAAf,CAAoBC,IAAD,iBACjB,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,eAEE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAgB,QAAA,IAAI,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,eAEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,EAEGD,IAAI,CAACE,KAFR,YAIGL,GAAG,CAACC,IAAJ,CAASK,QAAT,GACGN,GAAG,CAACC,IAAJ,CAASK,QAAT,CAAkBH,IAAI,CAACI,IAAvB,CADH,GAEGJ,IAAI,CAACI,IANX,OAOI,GAPJ,CAFF,EAUgB,GAVhB,eAWE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAaJ,IAAI,CAACK,OAAlB,MAXF,CADF,EAae,GAbf,eAcE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAeL,IAAI,CAACM,IAApB,MAdF,EAc2C,GAd3C,CAFF,EAiBU,GAjBV,CADF,CADM,CAAR;AAuBD,KA1BH;AA2BD;;AAED,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EACyC,GADzC,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOxB,KAAP,MADF,EACuB,GADvB,CAFF,EAIe,GAJf,CADF,EAMU,GANV,CADF;AAUD;;AAED,eAAeD,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport Config from \"../Configuration\";\n\nfunction TopVoted() {\n  let [items, setItems] = useState([]);\n\n  useEffect(() => {\n    updateItems();\n    const interval = setInterval(() => updateItems(), 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  function updateItems() {\n    var jsonObj = {\n      params: { team: Config.getTeamName(), sprint: Config.getSprintName() },\n    };\n\n    Config.getAxiosInstance()\n      .get(\"getTopVotedItemsForASprint\", jsonObj)\n      .then((res) => {\n        setItems(\n          res.data.items.map((item) => (\n            <Col key={item._id}>\n              {\" \"}\n              <Card bg=\"info\" text=\"white\">\n                <Card.Body>\n                  {\" \"}\n                  <Card.Title>\n                    {\" \"}\n                    {item.votes}\n                    votes[\n                    {res.data.settings\n                      ? res.data.settings[item.type]\n                      : item.type}\n                    ]{\" \"}\n                  </Card.Title>{\" \"}\n                  <Card.Text> {item.message} </Card.Text>\n                </Card.Body>{\" \"}\n                <Card.Footer> {item.name} </Card.Footer>{\" \"}\n              </Card>{\" \"}\n            </Col>\n          ))\n        );\n      });\n  }\n\n  return (\n    <Container fluid>\n      <Card border=\"light\">\n        <Card.Header> Top Voted </Card.Header>{\" \"}\n        <Card.Body>\n          <Row> {items} </Row>{\" \"}\n        </Card.Body>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default TopVoted;\n"]},"metadata":{},"sourceType":"module"}