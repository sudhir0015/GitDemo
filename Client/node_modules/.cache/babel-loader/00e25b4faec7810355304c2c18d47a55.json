{"ast":null,"code":"var _jsxFileName = \"/home/pradhant/caruso/panda-board/Client/src/Components/Body.js\";\nimport React, { useState, setUpdate, useRef } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport Config from \"../Configuration\";\nimport Board from \"./Board\";\nimport Chart from \"./Chart.js\";\nimport { GeneratePDF } from \"./PDFDocument\";\nimport Happiness from \"./Happiness\";\nimport Menu from \"./Menu/Menu\";\nimport TopVoted from \"./TopVoted\";\nimport Velocity from \"./Velocity\";\nconst teamNameToIgnore = \"http:\";\n\nfunction Body() {\n  // Sort controls\n  const boardRef = useRef();\n  let sortType = \"\";\n\n  const sortByVote = () => {\n    if (sortType !== \"vote\") {\n      boardRef.current.update(\"vote\");\n    }\n  };\n\n  const sortByDate = () => {\n    if (sortType !== \"date\") {\n      boardRef.current.update(\"date\");\n    }\n  };\n\n  async function getSprintsForATeam(teamName) {\n    let sprints = [];\n\n    if (teamName !== teamNameToIgnore) {\n      let jsonObj = {\n        params: {\n          team: teamName\n        }\n      };\n      let result = await Config.getAxiosInstance().get(\"getSprints\", jsonObj);\n      sprints = result.data;\n    }\n\n    return sprints;\n  }\n\n  async function getVoteCountForASprint(teamName, sprintName) {\n    let voteCount = 0;\n\n    if (teamName !== teamNameToIgnore) {\n      let jsonObj = {\n        params: {\n          team: teamName\n        }\n      };\n      let result = await Config.getAxiosInstance().get(\"checkIfVotingAllowed\", jsonObj);\n      Config.getAxiosInstance().get(\"checkIfVotingAllowed\", reqData).then(res => {\n        if (res.data[0] === true) {\n          Config.getAxiosInstance().post(\"/addvote\", {\n            _id: id\n          }).then(this.props.onBoardUpdate);\n        } else {\n          alert(\"Limit Reached! \" + \"Users -> [\" + res.data[1] + \"] Votes allowed -> [\" + res.data[2] + \"]\");\n        }\n      });\n      voteCount = result.data;\n    }\n\n    return voteCount;\n  }\n\n  const regEx = RegExp(\".+/team/.*/sprint/.*\");\n  var validBoard = regEx.test(window.location.href);\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), \" \", validBoard ? /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"float-right\",\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      backgroundColor: 'Red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 24\n    }\n  }, \"Vote Count\", \" \", this.getVoteCountForASprint(Config.getTeamName(), Config.getSprintName()))), /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    type: \"radio\",\n    name: \"options\",\n    defaultValue: \"SBD\",\n    style: {\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    variant: \"secondary\",\n    type: \"radio\",\n    name: \"options\",\n    id: \"option1\",\n    autocomplete: \"off\",\n    value: \"SBD\",\n    size: \"sm\",\n    onClick: sortByDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }\n  }, \" Sort by Date \"), /*#__PURE__*/React.createElement(ToggleButton, {\n    variant: \"secondary\",\n    type: \"radio\",\n    name: \"options\",\n    id: \"option2\",\n    autocomplete: \"off\",\n    value: \"SBV\",\n    size: \"sm\",\n    onClick: sortByVote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  }, \" Sort by Vote \")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    onClick: () => {\n      GeneratePDF(Config.getTeamName() + \"_\" + Config.getSprintName() + \"_retrospective.pdf\");\n    },\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Export to PDF\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Board, {\n    ref: boardRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })), \" \"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Happiness, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  })), \" \", /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Velocity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  })), \" \"), \" \"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TopVoted, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    variant: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, \" \", \" \", /*#__PURE__*/React.createElement(Chart, {\n    teamName: Config.getTeamName(),\n    sprints: getSprintsForATeam(Config.getTeamName()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }), \" \"), \" \"), \" \"), \" \");\n}\n\nexport default Body;","map":{"version":3,"sources":["/home/pradhant/caruso/panda-board/Client/src/Components/Body.js"],"names":["React","useState","setUpdate","useRef","Alert","Col","Container","Row","Button","ToggleButtonGroup","ToggleButton","Config","Board","Chart","GeneratePDF","Happiness","Menu","TopVoted","Velocity","teamNameToIgnore","Body","boardRef","sortType","sortByVote","current","update","sortByDate","getSprintsForATeam","teamName","sprints","jsonObj","params","team","result","getAxiosInstance","get","data","getVoteCountForASprint","sprintName","voteCount","reqData","then","res","post","_id","id","props","onBoardUpdate","alert","regEx","RegExp","validBoard","test","window","location","href","padding","backgroundColor","getTeamName","getSprintName","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, setUpdate, useRef } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\"\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\"\nimport ToggleButton from \"react-bootstrap/ToggleButton\"\n\nimport Config from \"../Configuration\";\n\nimport Board from \"./Board\";\nimport Chart from \"./Chart.js\";\nimport { GeneratePDF } from \"./PDFDocument\";\nimport Happiness from \"./Happiness\";\nimport Menu from \"./Menu/Menu\";\nimport TopVoted from \"./TopVoted\";\nimport Velocity from \"./Velocity\";\n\nconst teamNameToIgnore = \"http:\";\n\nfunction Body() {\n  // Sort controls\n  const boardRef = useRef();\n  let sortType = \"\";\n\n  const sortByVote = () => {\n    if (sortType !== \"vote\") {\n      boardRef.current.update(\"vote\")\n    }\n  }\n\n  const sortByDate = () => {\n    if (sortType !== \"date\") {\n      boardRef.current.update(\"date\")\n    }\n  }\n\n  async function getSprintsForATeam(teamName) {\n    let sprints = [];\n\n    if (teamName !== teamNameToIgnore) {\n      let jsonObj = {\n        params: {\n          team: teamName,\n        },\n      };\n      let result = await Config.getAxiosInstance().get(\"getSprints\", jsonObj);\n      sprints = result.data;\n    }\n    return sprints;\n  }\n\n  async function getVoteCountForASprint(teamName, sprintName) {\n    let voteCount = 0;\n\n    if (teamName !== teamNameToIgnore) {\n      let jsonObj = {\n        params: {\n          team: teamName,\n        },\n      };\n      let result = await Config.getAxiosInstance().get(\"checkIfVotingAllowed\", jsonObj);\n      Config.getAxiosInstance().get(\"checkIfVotingAllowed\", reqData).then(res => {\n        if (res.data[0] === true) {\n          Config.getAxiosInstance()\n            .post(\"/addvote\", { _id: id })\n            .then(this.props.onBoardUpdate);\n        }\n        else {\n          alert(\"Limit Reached! \" + \"Users -> [\" + res.data[1] + \"] Votes allowed -> [\" + res.data[2] + \"]\");\n        }\n      });\n      voteCount = result.data;\n    }\n    return voteCount;\n  }\n\n\n  const regEx = RegExp(\".+/team/.*/sprint/.*\");\n  var validBoard = regEx.test(window.location.href);\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col lg=\"2\">\n          <Menu />\n        </Col>{\" \"}\n        {validBoard ? (\n          <Col>\n            <Container fluid>\n              <Row>\n                <Col>\n                  <div class=\"float-right\" style={{ padding: 10 }}>\n                    <form style={{\n                      backgroundColor: 'Red'\n                    }}><h2>{\"Vote Count\"} {this.getVoteCountForASprint(Config.getTeamName(), Config.getSprintName())}</h2></form>\n                    <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue=\"SBD\" style={{ marginRight: \"10px\" }}>\n                      <ToggleButton variant=\"secondary\" type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" value=\"SBD\" size=\"sm\" onClick={sortByDate}> Sort by Date </ToggleButton>\n                      <ToggleButton variant=\"secondary\" type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\" value=\"SBV\" size=\"sm\" onClick={sortByVote}> Sort by Vote </ToggleButton>\n                    </ToggleButtonGroup>\n                    <Button variant=\"info\" onClick={() => { GeneratePDF(Config.getTeamName() + \"_\" + Config.getSprintName() + \"_retrospective.pdf\") }} size=\"sm\">\n                      Export to PDF\n                    </Button>\n                  </div><br />\n                </Col>\n              </Row>\n            </Container>\n            <Container fluid>\n              <Row>\n                <Board ref={boardRef} />\n              </Row>{\" \"}\n            </Container>{\" \"}\n            <p />\n            <Container fluid>\n              <Row>\n                <Col sm={8}>\n                  <Happiness />\n                </Col>{\" \"}\n                <Col sm={4}>\n                  <Velocity />\n                </Col>{\" \"}\n              </Row>{\" \"}\n            </Container>{\" \"}\n            <p />\n            <TopVoted />\n          </Col>\n        ) : (\n            <Col>\n              <p />\n              <Alert variant=\"info\">\n                {\" \"}\n                {/* Please select a valid board to show it first{\" \"} */}{\" \"}\n                {\n                  <Chart\n                    teamName={Config.getTeamName()}\n                    sprints={getSprintsForATeam(Config.getTeamName())}\n                  />\n                }{\" \"}\n              </Alert>{\" \"}\n            </Col>\n          )}{\" \"}\n      </Row>{\" \"}\n    </Container>\n  );\n}\n\nexport default Body;\n"]},"metadata":{},"sourceType":"module"}