{"ast":null,"code":"var _jsxFileName = \"/home/pradhant/caruso/panda-board/Client/src/Components/Header.js\";\nimport React from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Col from \"react-bootstrap/Col\";\n\nfunction checkIfVoteCountShouldBeDisplayed() {\n  const regEx = RegExp(\".+/team/.*/sprint/.*\");\n  let validBoard = regEx.test(window.location.href);\n\n  if (validBoard) {\n    return /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 10\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"div\", {\n      class: \"float-right\",\n      style: {\n        padding: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      style: {\n        backgroundColor: 'Red',\n        width: 240\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    }, \"Vote Count \" + 10)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nfunction Header() {\n  const [totalVote, updateVote] = useState(\"\");\n  useEffect(() => {\n    updateVoteCountForASprint(Config.getTeamName(), Config.getSprintName());\n  }, []);\n\n  const updateVoteCountForASprint = async (teamName, sprintName) => {\n    if (teamName !== teamNameToIgnore) {\n      let reqData = {\n        params: {\n          team: teamName,\n          sprint: sprintName\n        }\n      };\n      Config.getAxiosInstance().get(\"checkIfVotingAllowed\", reqData).then(result => {\n        updateVote(result.data[2]);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    bg: \"light\",\n    variant: \"green\",\n    width: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-paw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }\n  }), \"PandaBoard\"), checkIfVoteCountShouldBeDisplayed()));\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/pradhant/caruso/panda-board/Client/src/Components/Header.js"],"names":["React","Nav","Navbar","Col","checkIfVoteCountShouldBeDisplayed","regEx","RegExp","validBoard","test","window","location","href","padding","backgroundColor","width","Header","totalVote","updateVote","useState","useEffect","updateVoteCountForASprint","Config","getTeamName","getSprintName","teamName","sprintName","teamNameToIgnore","reqData","params","team","sprint","getAxiosInstance","get","then","result","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAGA,SAASC,iCAAT,GAA6C;AAC5C,QAAMC,KAAK,GAAGC,MAAM,CAAC,sBAAD,CAApB;AACA,MAAIC,UAAU,GAAGF,KAAK,CAACG,IAAN,CAAWC,MAAM,CAACC,QAAP,CAAgBC,IAA3B,CAAjB;;AAEA,MAAIJ,UAAJ,EAAgB;AACf,wBAAO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAM;AAAK,MAAA,KAAK,EAAC,aAAX;AAAyB,MAAA,KAAK,EAAE;AAAEK,QAAAA,OAAO,EAAE;AAAX,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACZ;AAAM,MAAA,KAAK,EAAE;AACZC,QAAAA,eAAe,EAAE,KADL;AAEZC,QAAAA,KAAK,EAAE;AAFK,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,gBAAgB,EAArB,CAAL,CAHH,CADY,CAAN,eAKD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALC,CAAP;AAMA;AACD;;AAED,SAASC,MAAT,GAAkB;AAEjB,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BC,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACfC,IAAAA,yBAAyB,CAACC,MAAM,CAACC,WAAP,EAAD,EAAuBD,MAAM,CAACE,aAAP,EAAvB,CAAzB;AACA,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMH,yBAAyB,GAAG,OAAOI,QAAP,EAAiBC,UAAjB,KAAgC;AAEjE,QAAID,QAAQ,KAAKE,gBAAjB,EAAmC;AAClC,UAAIC,OAAO,GAAG;AACbC,QAAAA,MAAM,EAAE;AACPC,UAAAA,IAAI,EAAEL,QADC;AAEPM,UAAAA,MAAM,EAAEL;AAFD;AADK,OAAd;AAMAJ,MAAAA,MAAM,CAACU,gBAAP,GAA0BC,GAA1B,CAA8B,sBAA9B,EAAsDL,OAAtD,EAA+DM,IAA/D,CAAoEC,MAAM,IAAI;AAC7EjB,QAAAA,UAAU,CAACiB,MAAM,CAACC,IAAP,CAAY,CAAZ,CAAD,CAAV;AACA,OAFD;AAGA;AACD,GAbD;;AAeA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,OAAX;AAAmB,IAAA,OAAO,EAAC,OAA3B;AAAmC,IAAA,KAAK,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,IAAI,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eADD,EAKE/B,iCAAiC,EALnC,CADD,CADD;AAWA;;AAED,eAAeW,MAAf","sourcesContent":["import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Col from \"react-bootstrap/Col\";\n\n\nfunction checkIfVoteCountShouldBeDisplayed() {\n\tconst regEx = RegExp(\".+/team/.*/sprint/.*\");\n\tlet validBoard = regEx.test(window.location.href);\n\n\tif (validBoard) {\n\t\treturn <Col> <div class=\"float-right\" style={{ padding: 10 }}>\n\t\t\t<form style={{\n\t\t\t\tbackgroundColor: 'Red',\n\t\t\t\twidth: 240,\n\t\t\t}}><Col><h2>{\"Vote Count \" + 10}</h2></Col></form>\n\t\t</div><br /></Col>\n\t}\n}\n\nfunction Header() {\n\n\tconst [totalVote, updateVote] = useState(\"\");\n\tuseEffect(() => {\n\t\tupdateVoteCountForASprint(Config.getTeamName(), Config.getSprintName());\n\t}, []);\n\n\tconst updateVoteCountForASprint = async (teamName, sprintName) => {\n\n\t\tif (teamName !== teamNameToIgnore) {\n\t\t\tlet reqData = {\n\t\t\t\tparams: {\n\t\t\t\t\tteam: teamName,\n\t\t\t\t\tsprint: sprintName\n\t\t\t\t},\n\t\t\t};\n\t\t\tConfig.getAxiosInstance().get(\"checkIfVotingAllowed\", reqData).then(result => {\n\t\t\t\tupdateVote(result.data[2]);\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar bg=\"light\" variant=\"green\" width=\"30\">\n\t\t\t\t<Navbar.Brand href=\"/\">\n\t\t\t\t\t<i className=\"fas fa-paw\" />\n\t\t\t\tPandaBoard\n\t\t\t</Navbar.Brand>\n\t\t\t\t{checkIfVoteCountShouldBeDisplayed()}\n\t\t\t</Navbar>\n\t\t</div >\n\t)\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}