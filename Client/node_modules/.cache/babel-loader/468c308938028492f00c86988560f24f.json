{"ast":null,"code":"var _jsxFileName = \"/home/pradhant/caruso/panda-board/Client/src/Components/Header.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Col from \"react-bootstrap/Col\";\nimport Config from \"../Configuration\";\nconst teamNameToIgnore = \"http:\";\n\nfunction Header() {\n  const [totalVote, updateVote] = useState(\"\");\n  useEffect(() => {\n    updateVoteCountForASprint(Config.getTeamName(), Config.getSprintName());\n  }, []);\n\n  const updateVoteCountForASprint = async (teamName, sprintName) => {\n    if (teamName !== teamNameToIgnore) {\n      let reqData = {\n        params: {\n          team: teamName,\n          sprint: sprintName\n        }\n      };\n      Config.getAxiosInstance().get(\"checkIfVotingAllowed\", reqData).then(result => {\n        updateVote(result.data[2]);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    bg: \"light\",\n    variant: \"green\",\n    width: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-paw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }), \"PandaBoard\"), checkIfVoteCountShouldBeDisplayed()));\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/pradhant/caruso/panda-board/Client/src/Components/Header.js"],"names":["React","useState","useRef","useEffect","Nav","Navbar","Col","Config","teamNameToIgnore","Header","totalVote","updateVote","updateVoteCountForASprint","getTeamName","getSprintName","teamName","sprintName","reqData","params","team","sprint","getAxiosInstance","get","then","result","data","checkIfVoteCountShouldBeDisplayed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAGA,MAAMC,gBAAgB,GAAG,OAAzB;;AAGA,SAASC,MAAT,GAAkB;AAEjB,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACAE,EAAAA,SAAS,CAAC,MAAM;AACfS,IAAAA,yBAAyB,CAACL,MAAM,CAACM,WAAP,EAAD,EAAuBN,MAAM,CAACO,aAAP,EAAvB,CAAzB;AACA,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMF,yBAAyB,GAAG,OAAOG,QAAP,EAAiBC,UAAjB,KAAgC;AAEjE,QAAID,QAAQ,KAAKP,gBAAjB,EAAmC;AAClC,UAAIS,OAAO,GAAG;AACbC,QAAAA,MAAM,EAAE;AACPC,UAAAA,IAAI,EAAEJ,QADC;AAEPK,UAAAA,MAAM,EAAEJ;AAFD;AADK,OAAd;AAMAT,MAAAA,MAAM,CAACc,gBAAP,GAA0BC,GAA1B,CAA8B,sBAA9B,EAAsDL,OAAtD,EAA+DM,IAA/D,CAAoEC,MAAM,IAAI;AAC7Eb,QAAAA,UAAU,CAACa,MAAM,CAACC,IAAP,CAAY,CAAZ,CAAD,CAAV;AACA,OAFD;AAGA;AACD,GAbD;;AAeA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,OAAX;AAAmB,IAAA,OAAO,EAAC,OAA3B;AAAmC,IAAA,KAAK,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,IAAI,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eADD,EAKEC,iCAAiC,EALnC,CADD,CADD;AAWA;;AAED,eAAejB,MAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Col from \"react-bootstrap/Col\";\nimport Config from \"../Configuration\";\n\n\nconst teamNameToIgnore = \"http:\";\n\n\nfunction Header() {\n\n\tconst [totalVote, updateVote] = useState(\"\");\n\tuseEffect(() => {\n\t\tupdateVoteCountForASprint(Config.getTeamName(), Config.getSprintName());\n\t}, []);\n\n\tconst updateVoteCountForASprint = async (teamName, sprintName) => {\n\n\t\tif (teamName !== teamNameToIgnore) {\n\t\t\tlet reqData = {\n\t\t\t\tparams: {\n\t\t\t\t\tteam: teamName,\n\t\t\t\t\tsprint: sprintName\n\t\t\t\t},\n\t\t\t};\n\t\t\tConfig.getAxiosInstance().get(\"checkIfVotingAllowed\", reqData).then(result => {\n\t\t\t\tupdateVote(result.data[2]);\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar bg=\"light\" variant=\"green\" width=\"30\">\n\t\t\t\t<Navbar.Brand href=\"/\">\n\t\t\t\t\t<i className=\"fas fa-paw\" />\n\t\t\t\tPandaBoard\n\t\t\t</Navbar.Brand>\n\t\t\t\t{checkIfVoteCountShouldBeDisplayed()}\n\t\t\t</Navbar>\n\t\t</div >\n\t)\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}