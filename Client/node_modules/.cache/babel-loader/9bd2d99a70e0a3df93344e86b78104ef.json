{"ast":null,"code":"var _jsxFileName = \"/home/pradhant/caruso/panda-board/Client/src/Components/Happiness.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css\";\nimport Container from \"react-bootstrap/Container\";\nimport RangeSlider from \"react-bootstrap-range-slider\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Config from \"../Configuration\";\nimport Alert from \"react-bootstrap/Alert\";\n\nconst Happiness = () => {\n  const [value, setValue] = useState(3.0);\n  const [name, setName] = useState(\"\");\n  const [average, setAverage] = useState(\"\");\n  const [happinessList, setHappinessList] = useState([]);\n  useEffect(() => {\n    updateAverage();\n    updateList();\n  }, []);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    var jsonObj = {\n      team: Config.getTeamName(),\n      sprint: Config.getSprintName(),\n      name: name,\n      happiness: value\n    };\n\n    if (!/[^$|^a-zA-Z]/.test(name)) {\n      Config.getAxiosInstance().post(\"updateHappiness\", jsonObj).then(() => {\n        updateAverage();\n      }).then(() => {\n        updateList();\n      });\n    }\n  }\n\n  function shouldEnableSubmit() {\n    if (/[^$|^a-zA-Z]/.test(name) || name === \"\") {\n      return false;\n    }\n\n    return true;\n  }\n\n  function changeHandler(event) {\n    setName(event.target.value);\n  }\n\n  function updateAverage() {\n    var jsonObj = {\n      params: {\n        team: Config.getTeamName(),\n        sprint: Config.getSprintName()\n      }\n    };\n    Config.getAxiosInstance().get(\"getAvgHappinessForASprint\", jsonObj).then(res => {\n      setAverage(res.data.average);\n    });\n  }\n\n  function removeHappiness(e) {\n    if (window.confirm(\"Do you want to remove happiness ?\")) {\n      Config.getAxiosInstance().post(\"removeHappiness\", {\n        id: e.currentTarget.dataset.id\n      }).then(() => {\n        updateAverage();\n      }).then(() => {\n        updateList();\n      });\n    }\n  }\n\n  function updateList() {\n    var jsonObj = {\n      params: {\n        team: Config.getTeamName(),\n        sprint: Config.getSprintName()\n      }\n    };\n    Config.getAxiosInstance().get(\"getHappinessForASprint\", jsonObj).then(res => {\n      setHappinessList(res.data.map(item => /*#__PURE__*/React.createElement(ListGroup.Item, {\n        key: item._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          borderBottom: \"1px solid #DCDBDB\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }\n      }, item.name), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      }, item.happiness), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        \"data-id\": item._id,\n        type: \"button\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        onClick: removeHappiness.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 23\n        }\n      }, \"\\xD7\"))))))));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    border: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Happiness\"), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    style: {\n      paddingLeft: \"0\",\n      paddingRight: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"needs-validation\",\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginBottom: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: true,\n    lg: \"2\",\n    style: {\n      paddingLeft: \"0\",\n      paddingRight: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    key: \"light\",\n    variant: \"light\",\n    style: {\n      paddingLeft: \"0\",\n      paddingRight: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, \"Range slider:\")), /*#__PURE__*/React.createElement(Col, {\n    xs: true,\n    lg: \"6\",\n    style: {\n      paddingLeft: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RangeSlider, {\n    value: value,\n    min: 1.0,\n    max: 5.0,\n    step: 1.0,\n    onChange: changeEvent => setValue(changeEvent.target.value),\n    style: {\n      marginBottom: \"8%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: true,\n    lg: \"2\",\n    style: {\n      paddingLeft: \"0\",\n      paddingRight: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    value: name,\n    name: \"name\",\n    onChange: changeHandler,\n    type: \"text\",\n    placeholder: \"Name\",\n    isValid: !/[^a-zA-Z]/.test(name) && name !== \"\",\n    isInvalid: /[^a-zA-Z]/.test(name) || name === \"\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: true,\n    lg: \"2\",\n    style: {\n      paddingLeft: \"5px\",\n      paddingRight: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: !shouldEnableSubmit(),\n    color: \"primary\",\n    type: \"submit\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, \"Submit Happiness\"))))), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      paddingLeft: \"0\",\n      paddingRight: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginBottom: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    style: {\n      paddingLeft: \"0\",\n      paddingRight: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, \" \", happinessList, \" \"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: true,\n    style: {\n      paddingLeft: \"0\",\n      paddingRight: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    key: \"primary\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, \"Average Happiness : \", average, \" \")))))));\n};\n\nexport default Happiness;","map":{"version":3,"sources":["/home/pradhant/caruso/panda-board/Client/src/Components/Happiness.js"],"names":["React","useState","useEffect","Container","RangeSlider","Card","Button","FormControl","ListGroup","Row","Col","Config","Alert","Happiness","value","setValue","name","setName","average","setAverage","happinessList","setHappinessList","updateAverage","updateList","handleSubmit","event","preventDefault","jsonObj","team","getTeamName","sprint","getSprintName","happiness","test","getAxiosInstance","post","then","shouldEnableSubmit","changeHandler","target","params","get","res","data","removeHappiness","e","window","confirm","id","currentTarget","dataset","map","item","_id","borderBottom","bind","paddingLeft","paddingRight","marginBottom","changeEvent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,oEAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,aAAa;AACbC,IAAAA,UAAU;AACX,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,OAAO,GAAG;AACZC,MAAAA,IAAI,EAAEjB,MAAM,CAACkB,WAAP,EADM;AAEZC,MAAAA,MAAM,EAAEnB,MAAM,CAACoB,aAAP,EAFI;AAGZf,MAAAA,IAAI,EAAEA,IAHM;AAIZgB,MAAAA,SAAS,EAAElB;AAJC,KAAd;;AAOA,QAAI,CAAC,eAAemB,IAAf,CAAoBjB,IAApB,CAAL,EAAgC;AAC9BL,MAAAA,MAAM,CAACuB,gBAAP,GACGC,IADH,CACQ,iBADR,EAC2BR,OAD3B,EAEGS,IAFH,CAEQ,MAAM;AACVd,QAAAA,aAAa;AACd,OAJH,EAKGc,IALH,CAKQ,MAAM;AACVb,QAAAA,UAAU;AACX,OAPH;AAQD;AACF;;AAED,WAASc,kBAAT,GAA8B;AAC5B,QAAI,eAAeJ,IAAf,CAAoBjB,IAApB,KAA6BA,IAAI,KAAK,EAA1C,EAA8C;AAC5C,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD;;AAED,WAASsB,aAAT,CAAuBb,KAAvB,EAA8B;AAC5BR,IAAAA,OAAO,CAACQ,KAAK,CAACc,MAAN,CAAazB,KAAd,CAAP;AACD;;AAED,WAASQ,aAAT,GAAyB;AACvB,QAAIK,OAAO,GAAG;AACZa,MAAAA,MAAM,EAAE;AACNZ,QAAAA,IAAI,EAAEjB,MAAM,CAACkB,WAAP,EADA;AAENC,QAAAA,MAAM,EAAEnB,MAAM,CAACoB,aAAP;AAFF;AADI,KAAd;AAMApB,IAAAA,MAAM,CAACuB,gBAAP,GACGO,GADH,CACO,2BADP,EACoCd,OADpC,EAEGS,IAFH,CAESM,GAAD,IAAS;AACbvB,MAAAA,UAAU,CAACuB,GAAG,CAACC,IAAJ,CAASzB,OAAV,CAAV;AACD,KAJH;AAKD;;AAED,WAAS0B,eAAT,CAAyBC,CAAzB,EAA4B;AAC1B,QAAIC,MAAM,CAACC,OAAP,CAAe,mCAAf,CAAJ,EAAyD;AACvDpC,MAAAA,MAAM,CAACuB,gBAAP,GACGC,IADH,CACQ,iBADR,EAC2B;AAAEa,QAAAA,EAAE,EAAEH,CAAC,CAACI,aAAF,CAAgBC,OAAhB,CAAwBF;AAA9B,OAD3B,EAEGZ,IAFH,CAEQ,MAAM;AACVd,QAAAA,aAAa;AACd,OAJH,EAKGc,IALH,CAKQ,MAAM;AACVb,QAAAA,UAAU;AACX,OAPH;AAQD;AACF;;AAED,WAASA,UAAT,GAAsB;AACpB,QAAII,OAAO,GAAG;AACZa,MAAAA,MAAM,EAAE;AACNZ,QAAAA,IAAI,EAAEjB,MAAM,CAACkB,WAAP,EADA;AAENC,QAAAA,MAAM,EAAEnB,MAAM,CAACoB,aAAP;AAFF;AADI,KAAd;AAMApB,IAAAA,MAAM,CAACuB,gBAAP,GACGO,GADH,CACO,wBADP,EACiCd,OADjC,EAEGS,IAFH,CAESM,GAAD,IAAS;AACbrB,MAAAA,gBAAgB,CACdqB,GAAG,CAACC,IAAJ,CAASQ,GAAT,CAAcC,IAAD,iBACX,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,GAAG,EAAEA,IAAI,CAACC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMF,IAAI,CAACpC,IAAX,CADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMoC,IAAI,CAACpB,SAAX,CAFF,eAGE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,mBAASoB,IAAI,CAACC,GADhB;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,SAAS,EAAC,OAHZ;AAIE,sBAAW,OAJb;AAKE,QAAA,OAAO,EAAET,eAAe,CAACW,IAAhB,CAAqB,IAArB,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AAAM,uBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,CAHF,CADF,CADF,CADF,CADc,CAAhB;AAuBD,KA1BH;AA2BD;;AAED,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE,GAAf;AAAoBC,MAAAA,YAAY,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,QAAQ,EAAEjC,YAFZ;AAGE,IAAA,UAAU,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEkC,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,MAAP;AAAQ,IAAA,EAAE,EAAC,GAAX;AAAe,IAAA,KAAK,EAAE;AAAEF,MAAAA,WAAW,EAAE,GAAf;AAAoBC,MAAAA,YAAY,EAAE;AAAlC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,OAAX;AAAmB,IAAA,OAAO,EAAC,OAA3B;AAAmC,IAAA,KAAK,EAAE;AAAED,MAAAA,WAAW,EAAE,GAAf;AAAoBC,MAAAA,YAAY,EAAE;AAAlC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,eAME,oBAAC,GAAD;AAAK,IAAA,EAAE,MAAP;AAAQ,IAAA,EAAE,EAAC,GAAX;AAAe,IAAA,KAAK,EAAE;AAAED,MAAAA,WAAW,EAAE;AAAf,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAE1C,KADT;AAEE,IAAA,GAAG,EAAE,GAFP;AAGE,IAAA,GAAG,EAAE,GAHP;AAIE,IAAA,IAAI,EAAE,GAJR;AAKE,IAAA,QAAQ,EAAG6C,WAAD,IACR5C,QAAQ,CAAC4C,WAAW,CAACpB,MAAZ,CAAmBzB,KAApB,CANZ;AAQE,IAAA,KAAK,EAAE;AAAE4C,MAAAA,YAAY,EAAE;AAAhB,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,eAkBE,oBAAC,GAAD;AAAK,IAAA,EAAE,MAAP;AAAQ,IAAA,EAAE,EAAC,GAAX;AAAe,IAAA,KAAK,EAAE;AAAEF,MAAAA,WAAW,EAAE,GAAf;AAAoBC,MAAAA,YAAY,EAAE;AAAlC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAEzC,IADT;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAEsB,aAHZ;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,MALd;AAME,IAAA,OAAO,EAAE,CAAC,YAAYL,IAAZ,CAAiBjB,IAAjB,CAAD,IAA2BA,IAAI,KAAK,EAN/C;AAOE,IAAA,SAAS,EAAE,YAAYiB,IAAZ,CAAiBjB,IAAjB,KAA0BA,IAAI,KAAK,EAPhD;AAQE,IAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlBF,eA+BE,oBAAC,GAAD;AAAK,IAAA,EAAE,MAAP;AAAQ,IAAA,EAAE,EAAC,GAAX;AAAe,IAAA,KAAK,EAAE;AAAEwC,MAAAA,WAAW,EAAE,KAAf;AAAsBC,MAAAA,YAAY,EAAE;AAApC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,CAACpB,kBAAkB,EAArC;AAAyC,IAAA,KAAK,EAAC,SAA/C;AAAyD,IAAA,IAAI,EAAC,QAA9D;AAAuE,IAAA,IAAI,EAAC,IAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CA/BF,CALF,CADF,CADF,eA8CE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEmB,MAAAA,WAAW,EAAE,GAAf;AAAoBC,MAAAA,YAAY,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,WAAW,EAAE,GAAf;AAAoBC,MAAAA,YAAY,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAarC,aAAb,MADF,CADF,CADF,eAME,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,MAAP;AAAQ,IAAA,KAAK,EAAE;AAAEoC,MAAAA,WAAW,EAAE,GAAf;AAAoBC,MAAAA,YAAY,EAAE;AAAlC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,SAAX;AAAqB,IAAA,OAAO,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACuBvC,OADvB,EACgC,GADhC,CADF,CADF,CANF,CA9CF,CAFF,CADF,CADF;AAoED,CA/KD;;AAiLA,eAAeL,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css\";\nimport Container from \"react-bootstrap/Container\";\nimport RangeSlider from \"react-bootstrap-range-slider\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Config from \"../Configuration\";\nimport Alert from \"react-bootstrap/Alert\";\n\nconst Happiness = () => {\n  const [value, setValue] = useState(3.0);\n  const [name, setName] = useState(\"\");\n  const [average, setAverage] = useState(\"\");\n  const [happinessList, setHappinessList] = useState([]);\n\n  useEffect(() => {\n    updateAverage();\n    updateList();\n  }, []);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    var jsonObj = {\n      team: Config.getTeamName(),\n      sprint: Config.getSprintName(),\n      name: name,\n      happiness: value,\n    };\n\n    if (!/[^$|^a-zA-Z]/.test(name)) {\n      Config.getAxiosInstance()\n        .post(\"updateHappiness\", jsonObj)\n        .then(() => {\n          updateAverage();\n        })\n        .then(() => {\n          updateList();\n        });\n    }\n  }\n\n  function shouldEnableSubmit() {\n    if (/[^$|^a-zA-Z]/.test(name) || name === \"\") {\n      return false;\n    }\n\n    return true;\n  }\n\n  function changeHandler(event) {\n    setName(event.target.value);\n  }\n\n  function updateAverage() {\n    var jsonObj = {\n      params: {\n        team: Config.getTeamName(),\n        sprint: Config.getSprintName(),\n      },\n    };\n    Config.getAxiosInstance()\n      .get(\"getAvgHappinessForASprint\", jsonObj)\n      .then((res) => {\n        setAverage(res.data.average);\n      });\n  }\n\n  function removeHappiness(e) {\n    if (window.confirm(\"Do you want to remove happiness ?\")) {\n      Config.getAxiosInstance()\n        .post(\"removeHappiness\", { id: e.currentTarget.dataset.id })\n        .then(() => {\n          updateAverage();\n        })\n        .then(() => {\n          updateList();\n        });\n    }\n  }\n\n  function updateList() {\n    var jsonObj = {\n      params: {\n        team: Config.getTeamName(),\n        sprint: Config.getSprintName(),\n      },\n    };\n    Config.getAxiosInstance()\n      .get(\"getHappinessForASprint\", jsonObj)\n      .then((res) => {\n        setHappinessList(\n          res.data.map((item) => (\n            <ListGroup.Item key={item._id}>\n              <div style={{ borderBottom: \"1px solid #DCDBDB\" }}>\n                <Row>\n                  <Col>{item.name}</Col>\n                  <Col>{item.happiness}</Col>\n                  <Col>\n                    <button\n                      data-id={item._id}\n                      type=\"button\"\n                      className=\"close\"\n                      aria-label=\"Close\"\n                      onClick={removeHappiness.bind(this)}\n                    >\n                      <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                  </Col>\n                </Row>\n              </div>\n            </ListGroup.Item>\n          ))\n        );\n      });\n  }\n\n  return (\n    <Container fluid>\n      <Card border=\"light\">\n        <Card.Header>Happiness</Card.Header>\n        <Card.Body>\n          <Col style={{ paddingLeft: \"0\", paddingRight: \"0\" }}>\n            <form\n              className=\"needs-validation\"\n              onSubmit={handleSubmit}\n              noValidate\n            >\n              <Row style={{ marginBottom: \"30px\" }}>\n                <Col xs lg=\"2\" style={{ paddingLeft: \"0\", paddingRight: \"0\" }}>\n                  <Alert key=\"light\" variant=\"light\" style={{ paddingLeft: \"0\", paddingRight: \"0\" }}>\n                    Range slider:\n                  </Alert>\n                </Col>\n                <Col xs lg=\"6\" style={{ paddingLeft: \"0\" }}>\n                  <RangeSlider\n                    value={value}\n                    min={1.0}\n                    max={5.0}\n                    step={1.0}\n                    onChange={(changeEvent) =>\n                      setValue(changeEvent.target.value)\n                    }\n                    style={{ marginBottom: \"8%\" }}\n                  />\n                </Col>\n                <Col xs lg=\"2\" style={{ paddingLeft: \"0\", paddingRight: \"0\" }}>\n                  <FormControl\n                    value={name}\n                    name=\"name\"\n                    onChange={changeHandler}\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    isValid={!/[^a-zA-Z]/.test(name) && name !== \"\"}\n                    isInvalid={/[^a-zA-Z]/.test(name) || name === \"\"}\n                    required\n                  />\n                </Col>\n\n                <Col xs lg=\"2\" style={{ paddingLeft: \"5px\", paddingRight: \"0\" }}>\n                  <Button disabled={!shouldEnableSubmit()} color=\"primary\" type=\"submit\" size=\"sm\">\n                    Submit Happiness\n                  </Button>\n                </Col>\n              </Row>\n            </form>\n          </Col>\n          <Col style={{ paddingLeft: \"0\", paddingRight: \"0\" }}>\n            <Row style={{ marginBottom: \"30px\" }}>\n              <Col style={{ paddingLeft: \"0\", paddingRight: \"0\" }}>\n                <ListGroup> {happinessList} </ListGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs style={{ paddingLeft: \"0\", paddingRight: \"0\" }}>\n                <Alert key=\"primary\" variant=\"primary\">\n                  Average Happiness : {average}{\" \"}\n                </Alert>\n              </Col>\n            </Row>\n          </Col>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Happiness;\n"]},"metadata":{},"sourceType":"module"}