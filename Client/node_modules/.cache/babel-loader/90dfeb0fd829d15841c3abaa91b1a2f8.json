{"ast":null,"code":"var _jsxFileName = \"/home/pradhant/caruso/panda-board/Client/src/Components/Item.js\";\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Card from 'react-bootstrap/Card';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nfunction Item(props) {\n  const [actionPoint, setActionPoint] = useState(\"\");\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    event.target.className += \" was-validated\";\n    console.log(\"here\");\n\n    if (actionPoint !== \"\") {\n      props.onAddActionPoint(props.item._id, actionPoint);\n      setActionPoint(\"\");\n      event.target.className = \"needs-validation\";\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    border: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      whiteSpace: \"pre-wrap\",\n      borderBottom: \"1px solid #DCDBDB\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }\n  }, props.item.message)), props.item.actionPoints ? /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, props.item.actionPoints.map(item => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 52\n    }\n  }, item))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"needs-validation\",\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    onSubmit: handleSubmit,\n    className: \"mb-3\",\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    placeholder: \"Action point\",\n    size: \"sm\",\n    value: actionPoint,\n    onChange: e => setActionPoint(e.target.value),\n    type: \"text\",\n    placeholder: \"Action point\",\n    required: true,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, \"Add AP\"))))))), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Text, {\n    className: \"text-muted\",\n    style: {\n      fontSize: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, props.item.name, \" / \", props.item.date), /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    onClick: () => props.onVote(props.item._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Vote \", /*#__PURE__*/React.createElement(Badge, {\n    variant: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 20\n    }\n  }, \" \", props.item.votes, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \" votes \")), \" \", /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-danger\",\n    onClick: () => props.onUnvote(props.item._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Unvote\"), \" \", /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: () => props.onRemove(props.item._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Remove\"))));\n}\n\nexport default Item;","map":{"version":3,"sources":["/home/pradhant/caruso/panda-board/Client/src/Components/Item.js"],"names":["React","useState","Button","Badge","ListGroup","Row","Col","FormControl","Card","InputGroup","Item","props","actionPoint","setActionPoint","handleSubmit","event","preventDefault","target","className","console","log","onAddActionPoint","item","_id","whiteSpace","borderBottom","message","actionPoints","map","e","value","fontSize","name","date","onVote","votes","onUnvote","onRemove"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Card from 'react-bootstrap/Card'\nimport InputGroup from 'react-bootstrap/InputGroup'\n\nfunction Item(props) {\n\n  const [actionPoint, setActionPoint] = useState(\"\")\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    event.target.className += \" was-validated\";\n    console.log(\"here\");\n    if (actionPoint !== \"\")\n    {\n      props.onAddActionPoint(props.item._id, actionPoint)\n      setActionPoint(\"\");\n      event.target.className = \"needs-validation\";\n    }\n  }\n\n  return (\n    <div className='mt-1'>\n      <Card border=\"info\">\n        <Card.Body>\n          <Card.Text><div style={{whiteSpace: \"pre-wrap\", borderBottom: \"1px solid #DCDBDB\"}}>{props.item.message}</div></Card.Text>\n          {\n            props.item.actionPoints ?\n            <ListGroup>\n              {props.item.actionPoints.map(item => <ListGroup.Item>{item}</ListGroup.Item>)}\n            </ListGroup>\n            :\n            <p />\n          }\n          <p />\n          <Row>\n            <Col>\n              <form\n                  className=\"needs-validation\"\n                  onSubmit={handleSubmit}\n                  noValidate\n              >\n              <InputGroup onSubmit={handleSubmit} className=\"mb-3\" noValidate>\n                <FormControl\n                  placeholder=\"Action point\"\n                  size=\"sm\"\n                  value={actionPoint}\n                  onChange={e => setActionPoint(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"Action point\"\n                  required\n                  noValidate\n                />\n                <InputGroup.Append>\n                  <Button  size=\"sm\" color=\"primary\" type=\"submit\">Add AP</Button>\n                </InputGroup.Append>\n              </InputGroup>\n              </form>\n            </Col>\n          </Row>\n\n        </Card.Body>\n        <Card.Footer>\n          <Card.Text className=\"text-muted\" style={{fontSize: '10px'}}>{props.item.name} / {props.item.date}</Card.Text> \n            <Button variant=\"info\" onClick={() => props.onVote(props.item._id)}>\n              Vote <Badge variant=\"light\"> {props.item.votes} </Badge>\n              <span className=\"sr-only\"> votes </span>\n            </Button>\n            {\" \"}\n            <Button variant=\"outline-danger\" onClick={() => props.onUnvote(props.item._id)}>\n              Unvote\n            </Button>\n            {\" \"}\n            <Button variant=\"danger\" onClick={() => props.onRemove(props.item._id)}>\n              Remove\n            </Button>\n        </Card.Footer>\n      </Card>\n    </div>\n  );\n}\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}